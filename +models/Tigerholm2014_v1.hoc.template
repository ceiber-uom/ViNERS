/*--------------------------------------------------------------------

10/2019		Calvin Eiber

SIMULATION OF PNS UNMYELINATED FIBRE.

>>>> from Nikki Pelot (ASCENT) implementation of Jenny Tigerholm 2014

----------------------------------------------------------------------*/

// Read in voltages in each axon segment
strdef cache_path
cache_path = "$CACHEPATH"
load_file("./+models/import_Ve_data.hoc")
import_fields(1,$thread)

// Fiber diameter (generate at template formation)
fiberDiam=$fibreDiam

// The number of nodes (generate at template formation)
axonnodes=$nNodes

load_file("noload.hoc")

proc model_globels() {
	celsius=37	//degrees C//	// Human body temperature
 	v_init=-55  //mV//          // starting voltage

	dt=0.01   //ms//            // time step
	tstop=$simDuration  //ms//           // time at which simulation terminates

}

model_globels()

objectvar stim, axon
create node[axonnodes]
access node[0]	//APD

axon = new List()

proc initialize(){

	// print nl
	// print fiberDiam
	// print axonD
	// print paraD2
	// print paraD1

	forall insert extracellular // initialize extracellular voltage source
	forall e_extracellular = 0  // set extracellular voltage source to ground

    axon.append(new List()) // NODE list
	for i=0,axonnodes-1 {

		node[i]{
			nseg = 1
			diam = fiberDiam
			L    = $nodeLength // 10 um nominally

			insert ks 
			gbar_ks 	= 0.0069733 * $p_gbar_ks 
			insert kf
			gbar_kf 	= 0.012756  * $p_gbar_ks
			insert h
			gbar_h 		= 0.0025377  * $p_gbar_h
			insert nattxs
			gbar_nattxs 	= 0.10664  * $p_nattxs
			insert nav1p8 
			gbar_nav1p8 	= 0.24271  * $p_nav18
			insert nav1p9
			gbar_nav1p9 	= 9.4779e-05 * $p_nav19
			insert nakpump
			smalla_nakpump 	= -0.0047891 * $p_a_nakPump
			insert kdr_Tiger
			gbar_kdr 	= 0.018002  * $p_gbar_kdr
			insert kna
			gbar_kna 	= 0.00042  * $p_gbar_kna
			insert naoi // na_ion_dynamics
			theta_naoi	= 0.029	   * $p_theta_naoi
			insert koi // k_ion_dynamics
			theta_koi	= 0.029	   * $p_theta_koi

			insert leak
			insert extrapump	

			Ra 		= 35.5 * $p_rhoA
			cm 		= 1    * $p_cm

			celsiusT_ks 	= celsius
			celsiusT_kf 	= celsius
			celsiusT_h    	= celsius
			celsiusT_nattxs = celsius
			celsiusT_nav1p8 = celsius
			celsiusT_nav1p9 = celsius
			celsiusT_nakpump = celsius
			celsiusT_kdr 	= celsius   

			v = v_init * $p_vrest // set Vrest

			insert extracellular

			xraxial=1e10 xg=1e10 xc=0 // default second-cable parameters
			axon.o(0).append(new SectionRef())
		}
	}

	for i=0, axonnodes-2 {
		// connect child, parent
		connect node[i+1](0), node[i](1)
	}

#IFDEF branching_axons // non-linear axon topology
	@[models.branching_axons()] // Execute models.branching_axons,
	// all relevent information passed via models.branching_axons -setup
#ENDIF

	forall { // reviewed CE 2020/11/11

		v = v_init
		finitialize(v_init) // recompute initial currents
		fcurrent()

		// e_pas = v + (ina + ik)/g_pas	// calculate leak equilibrium potential
	}

	// this order is the type sequence generated by matlab
	// see +models.axon_model/make_Vfield_datfiles
	// NODE, MYSA, FLUT, STIN for MRG model, just NODE for me
}




initialize()

strdef output_file
output_file = "$CACHEPATH/NEURON_vm$thread.dat"

// it's assumed that the working directory is %BIDSROOT% /code
// the actual model code lives in %BIDSROOT% / code / +models
load_file("./+models/analysis_interface.hoc")
